server:
  port: 8080
  forward-headers-strategy: framework
#  ssl:
#    enabled: true
#    key-store: keystore.p12
#    key-store-password: ${DB_PWD}
#    key-store-type: PKCS12
#    key-alias: spring

spring:
  config:
    import: optional:file:.env[.properties]
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_ID}
    password: ${DB_PWD}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 10
      connection-timeout: 10000
      connection-init-sql: SELECT 1
      idle-timeout: 600000
      max-lifetime: 1800000
      auto-commit: true

  servlet:
    multipart:
      max-file-size: 25MB

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 1000

  #oauth 설정
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_KEY}
            client-secret: ${GOOGLE_SECRET}
            scope: profile, email

          naver:
            client-id: ${NAVER_KEY}
            client-secret: ${NAVER_SECRET}
            redirect-uri: ${NAVER_REDIRECT}
            authorization-grant-type: authorization_code
            scope: name, email, profile_image
            client-name: Naver

          kakao:
            client-id: ${KAKAO_KEY}
            client-secret: ${KAKAO_SECRET}
            redirect-uri: ${KAKAO_REDIRECT}
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope: profile_nickname, profile_image, account_email
            client-name: Kakao

        provider:
          naver:
            authorization_uri: https://nid.naver.com/oauth2.0/authorize
            token_uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user_name_attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

  #Swaager 사용에 필요
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

#S3 setting
#cloud.aws.credentials.accessKey=${S3_ACCESSKEY}
#cloud.aws.credentials.secretKey=${S3_SECRETKEY}
#cloud.aws.stack.auto=false

# AWS S3 Service bucket
#cloud.aws.s3.bucket=adventour-bucket
#cloud.aws.region.static=ap-northeast-2

# AWS S3 Bucket URL
#cloud.aws.s3.bucket.url=https://adventour-bucket.s3.ap-northeast-2.amazonaws.com/

logging:
  level:
    root: info

jwt:
  secretKey: ${JWT_PWD}

  access:
    expiration: 3600000 # ms -> 1시간
    header: Authorization

  refresh:
    expiration: 1209600000 #  ms -> 2주
    header: Authorization-refresh

  redirect:
    ${REACT_REDIRECT}

openvidu:
  meetingUrl: ${MEETING_URL}

  serverUrl: ${OPENVIDU_SERVER_URL}

  serverSecret: ${OPENVIDU_SERVER_SECRET}

